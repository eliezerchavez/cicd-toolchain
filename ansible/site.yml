---
- hosts: localhost
  tasks:
  - name: 'install pre-requisites'
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      update_cache: true
  - name: 'add docker apt repository key'
    apt_key:
      url: 'https://download.docker.com/linux/ubuntu/gpg'
  - name: 'add docker apt repository into sources list'
    apt_repository:
      repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
      update_cache: true
  - name: 'install docker'
    apt:
      pkg:
      - containerd.io
      - docker-ce
      - docker-ce-cli
      - docker-compose
      update_cache: true
  - name: 'start docker'
    service:
      enabled: true
      name: 'docker'
      state: 'restarted'
  - name: 'associate {{ username }} user to docker group'
    user:
      append: true
      groups: docker
      name: '{{ username }}'

  - name: 'create docker network'
    docker_network:
      name: tools

  - name: '[PostgreSQL] create volume paths'
    file:
      path: '{{ storage }}/postgres/data'
      state: directory
  - name: '[PostgreSQL] start container'
    docker_container:
      env:
        POSTGRES_PASSWORD: postgres
      image: postgres:13
      name: postgres
      networks:
      - name: tools
      restart_policy: unless-stopped
      state: started
      volumes:
      - '{{ storage }}/postgres/conf/postgres-initdb.sql:/docker-entrypoint-initdb.d/init.sql'
      - '{{ storage }}/postgres/data:/var/lib/postgresql/data'
  
  - name: '[SonarQube] create volume paths'
    file:
      path: '{{ item }}'
      state: directory
    loop:
    - '{{ storage }}/sonarqube/data'
    - '{{ storage }}/sonarqube/logs'
    - '{{ storage }}/sonarqube/extensions'
  - name: '[SonarQube] start container'
    docker_container:
      env:
        SONAR_JDBC_USERNAME: sonar
        SONAR_JDBC_PASSWORD: sonar
        SONAR_JDBC_URL: 'jdbc:postgresql://postgres/sonar'
        SONAR_WEB_CONTEXT: '/sonarqube'
      image: sonarqube:8-community
      name: sonarqube
      networks: 
      - tools
      ports:
      - 9000:9000
      restart_policy: unless-stopped
      state: started
      volumes:
      - '{{ storage }}/sonarqube/data:/opt/sonarqube/data'
      - '{{ storage }}/sonarqube/logs:/opt/sonarqube/logs'
      - '{{ storage }}/sonarqube/extensions:/opt/sonarqube/extensions'
  - name: '[SonarQube] wait for service to become available'
    wait_for:
      port: 9000
      delay: 120
  vars:
    username: 'tools'
    storage: '/home/{{ tools }}/cicd-toolchain/storage'
